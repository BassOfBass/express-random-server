extends ../../layout

append styles
block content
  h2 Advanced styling
  section
    h3 Task 1
    blockquote(cite="https://developer.mozilla.org/en-US/docs/Learn/Forms/Test_your_skills:_Advanced_styling#Advanced_form_styling_1")
      p In our first advanced styling tasks, we want you to handle making a search input as consistent as possible across browsers — a trickier task than with standard text inputs, even on modern browsers.
      p We've already provided you with a basic reset to build upon.
      ol
        li First of all, try giving the search box a consistent width, height, padding, and border color across browsers.
        li You'll find that some browsers will not behave in terms of the form element's height. This is due to native OS styling being used in some cases. How can you remove this native styling?
        li Once you've removed the native styling, you'll need to add back one of the features it was providing, to keep same look and feel we originally had. How do you do this?
        li One thing that is inconsistent across browsers (particularly looking at Safari here) is the position of the standard blue focus outline. How can you remove this?
        li There is a major problem with just getting rid of the blue focus outline. What is it? Can you add some kind of styling back in so that users can tell when the search box is being hovered or focused?
        li Another thing that commonly denotes a search box is a magnifying glass icon. We've made one available in the same directory as our HTML files — see <a class="external" href="https://github.com/mdn/learning-area/blob/master/html/forms/tasks/advanced-styling/search-24px.png" rel="noopener">search-24px.png</a> — plus a <code>&lt;div&gt;</code> element after the search input to help you attach it, should you need it. Can you figure out a sensible way to attach it, and can you use some CSS to get it to sit to the right of the search box, and be lined up vertically as well?
    form#searchbox
      input#search( type="search", name="search", aria-label="Search our site" )
      div

  section#everypony
    h3 Task 2
    blockquote(cite="https://developer.mozilla.org/en-US/docs/Learn/Forms/Test_your_skills:_Advanced_styling#Advanced_form_styling_2")
      p In our next task we provide you with a set of three radio buttons. We want you to give them custom styling.
      p We've already provided you with a basic reset to build upon.
      ol
        li First of all, get rid of their default styling.
        li Next, give the radio buttons a reasonable base style — the style they have when the page first loads. This can be anything you like, but you probably want to set a width and height (of somewhere between about 18 and 24 pixels), and a subtle border and/or background color.
        li Now give the radio buttons a different style for when they are selected.
        li Align the radio buttons nicely with the labels.
    form
      fieldset
        legend Who is your favorite pony?
        ul
          li 
            label(for="pinkie") Pinkie Pie
            input#pinkie( type="radio", name="pony", value="pinkie")
          li 
            label(for="rainbow") Rainbow Dash
            input#rainbow( type="radio", name="pony", value="rainbow")
          li 
            label(for="twilight") Twilight Sparkle
            input#twilight( type="radio", name="pony", value="twilight")
  section
    h3 Task 3
    blockquote(cite="https://developer.mozilla.org/en-US/docs/Learn/Forms/Test_your_skills:_Advanced_styling#Advanced_form_styling_3")
      p In our final task for this assessment series, we provide you with a feedback form that is already nicely-styled — you've already seen something similar if you've worked through our <a href="/en-US/docs/Learn/Forms/UI_pseudo-classes">UI pseudo-classes</a> article, and now we want you to come up with your own solution.
      p What we'd like you to do is make use of some advanced pseudo-classes to provide some useful indicators of validity.
      ol
        li First of all, we want you to provide some specific styling to visually indicate which inputs have to be filled in — they cannot be left empty.
        li Second, we want you to provide a useful visual indicator of whether the data entered inside each input is valid or not.
    form
      fieldset
        legend Feedback form
        p Required fields are labelled with "required".
        div
          label(for="fname") 
          input#fname(type="text" name="fname" required)
          span
        div
          label(for="lname") 
          input#lname(type="text" name="lanme" required)
          span
        div
          label(for="email") 
          input#email(type="email" name="email")
          span
        div
          button(type="submit") Submit
